# AI Trading System - Production Environment Template
# =====================================================
# CRITICAL: Copy this to .env.production and fill in ALL values
# NEVER commit .env.production to version control
# ALL values marked as REQUIRED must be set or deployment will fail

# ===================
# Database Configuration
# ===================
DB_USER=<REQUIRED: Database username>
DB_PASSWORD=<REQUIRED: Strong password, min 16 chars>
DB_NAME=trading_production
DB_HOST=postgres
DB_PORT=5432
# Enable encryption at rest
DB_ENCRYPTION=true
DB_SSL_MODE=require

# ===================
# Security Keys
# ===================
SECRET_KEY=<REQUIRED: Generate with: openssl rand -hex 32>
JWT_SECRET=<REQUIRED: Generate with: openssl rand -hex 32>
ENCRYPTION_KEY=<REQUIRED: Generate with: openssl rand -hex 32>

# ===================
# Redis Configuration
# ===================
REDIS_PASSWORD=<REQUIRED: Strong password, min 16 chars>
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_SSL=true

# ===================
# Monitoring & Observability
# ===================
GRAFANA_USER=<REQUIRED: Admin username>
GRAFANA_PASSWORD=<REQUIRED: Strong password>
PROMETHEUS_AUTH_TOKEN=<REQUIRED: Generate with: openssl rand -hex 16>

# ===================
# Market Data APIs (Free tiers available)
# ===================
# Alpaca - Sign up at https://alpaca.markets (free tier available)
ALPACA_API_KEY=<OPTIONAL: Your Alpaca API key>
ALPACA_SECRET=<OPTIONAL: Your Alpaca secret>
ALPACA_BASE_URL=https://api.alpaca.markets

# Polygon - Sign up at https://polygon.io (free tier available)
POLYGON_API_KEY=<OPTIONAL: Your Polygon API key>

# Alpha Vantage - Sign up at https://www.alphavantage.co (free tier available)
ALPHA_VANTAGE_API_KEY=<OPTIONAL: Your Alpha Vantage API key>

# News API - Sign up at https://newsapi.org (free tier available)
NEWS_API_KEY=<OPTIONAL: Your News API key>

# ===================
# AI Models Configuration
# ===================
# ALL MODELS RUN LOCALLY - NO API KEYS NEEDED
# Ensure Ollama is installed and models are pulled
OLLAMA_HOST=http://localhost:11434
USE_LOCAL_MODELS_ONLY=true
# Models to pull: qwen2.5:72b, deepseek-r1:70b, llama3.1:70b, mixtral:8x7b, phi3:medium

# ===================
# Web Security
# ===================
CORS_ORIGINS=<REQUIRED: Your domain, e.g., https://yourdomain.com>
TRUSTED_HOSTS=<REQUIRED: Your domain, e.g., yourdomain.com>
LETSENCRYPT_EMAIL=<REQUIRED: Your email for SSL certificates>

# ===================
# Backup Configuration
# ===================
BACKUP_ENABLED=true
BACKUP_PATH=/mnt/bulkdata/backups
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION_KEY=<REQUIRED: Generate with: openssl rand -hex 32>

# Optional: S3 backup (if using cloud backup)
BACKUP_S3_BUCKET=<OPTIONAL: Your S3 bucket name>
BACKUP_S3_REGION=<OPTIONAL: AWS region>
AWS_ACCESS_KEY_ID=<OPTIONAL: AWS access key>
AWS_SECRET_ACCESS_KEY=<OPTIONAL: AWS secret key>

# ===================
# Application Settings
# ===================
ENVIRONMENT=production
LOG_LEVEL=INFO
API_PORT=8000
DEBUG=false

# ===================
# Security Limits
# ===================
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_FAIL_CLOSED=true  # Critical: Fail closed in production
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15
SESSION_TIMEOUT_MINUTES=30

# ===================
# Performance Tuning
# ===================
API_WORKERS=4
WEBSOCKET_MAX_CONNECTIONS=1000
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=40
REDIS_MAX_CONNECTIONS=100

# ===================
# Optional: Advanced Features
# ===================
# Vault integration (if using HashiCorp Vault)
VAULT_ADDR=<OPTIONAL: Vault address>
VAULT_TOKEN=<OPTIONAL: Vault token>

# Vector database (if using Weaviate)
WEAVIATE_API_KEY=<OPTIONAL: Weaviate API key>

# Additional brokers (if needed)
BINANCE_API_KEY=<OPTIONAL: Binance API key>
BINANCE_SECRET=<OPTIONAL: Binance secret>
INTERACTIVE_BROKERS_KEY=<OPTIONAL: IB gateway key>

# Social media (if using sentiment analysis)
REDDIT_CLIENT_ID=<OPTIONAL: Reddit app client ID>
REDDIT_CLIENT_SECRET=<OPTIONAL: Reddit app secret>

# ===================
# IMPORTANT NOTES
# ===================
# 1. Generate all secrets using cryptographically secure methods
# 2. Use different secrets for each environment (dev/staging/production)
# 3. Rotate secrets regularly (at least every 90 days)
# 4. Store production secrets in a secure vault, not in files
# 5. Enable audit logging for all secret access
# 6. Use strong passwords: min 16 chars, mixed case, numbers, symbols
# 7. ALL REQUIRED fields must be filled before deployment