# Prometheus alerting rules for AI Trading System
groups:
  - name: trading_system_alerts
    rules:
      # System Health Alerts
      - alert: ServiceDown
        expr: up{job="trading-api"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Trading API service is down"
          description: "The trading API service has been down for more than 1 minute"

      - alert: HighErrorRate
        expr: rate(http_requests_total{code=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for endpoint {{ $labels.endpoint }}"

      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time"
          description: "95th percentile response time is {{ $value }}s"

      # Security Alerts
      - alert: HighFailedLoginRate
        expr: increase(auth_failed_login_attempts_total[5m]) > 20
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High rate of failed login attempts"
          description: "{{ $value }} failed login attempts in the last 5 minutes"

      - alert: SuspiciousLoginActivity
        expr: increase(auth_failed_login_attempts_total[1m]) > 10
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Potential brute force attack"
          description: "{{ $value }} failed login attempts from IP {{ $labels.ip_address }} in 1 minute"

      - alert: CircuitBreakerOpen
        expr: circuit_breaker_state == 2
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Circuit breaker is open"
          description: "Circuit breaker {{ $labels.circuit_breaker }} is open"

      # Trading Alerts
      - alert: ExcessiveDrawdown
        expr: trading_risk_max_drawdown > 0.10
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Excessive portfolio drawdown"
          description: "Portfolio drawdown is {{ $value | humanizePercentage }}"

      - alert: HighExposure
        expr: trading_risk_exposure_ratio > 0.95
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High portfolio exposure"
          description: "Portfolio exposure ratio is {{ $value | humanizePercentage }}"

      - alert: TradingOrderFailures
        expr: rate(trading_orders_failed_total[5m]) > 0.1
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "High order failure rate"
          description: "Order failure rate is {{ $value }}/min"

      # ML Model Alerts
      - alert: ModelDriftDetected
        expr: ml_model_drift_score > 0.7
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Model drift detected"
          description: "Model {{ $labels.model_name }} drift score is {{ $value }}"

      - alert: LowModelAccuracy
        expr: ml_model_accuracy < 0.6
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "Low model accuracy"
          description: "Model {{ $labels.model_name }} accuracy dropped to {{ $value | humanizePercentage }}"

      - alert: FeatureStoreStale
        expr: (ml_feature_store_features_fresh / ml_feature_store_features_total) < 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Feature store has stale features"
          description: "Only {{ $value | humanizePercentage }} of features are fresh"

      - alert: HighInferenceLatency
        expr: histogram_quantile(0.95, rate(ml_inference_duration_seconds_bucket[5m])) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High ML inference latency"
          description: "95th percentile inference latency is {{ $value }}s"

      # Database Alerts
      - alert: DatabaseConnectionFailure
        expr: increase(db_connection_errors_total[5m]) > 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Database connection failures"
          description: "{{ $value }} database connection failures in 5 minutes"

      - alert: HighDatabaseLatency
        expr: histogram_quantile(0.95, rate(db_query_duration_seconds_bucket[5m])) > 0.5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database query latency"
          description: "95th percentile DB query time is {{ $value }}s"

      # Resource Alerts
      - alert: HighMemoryUsage
        expr: (process_resident_memory_bytes / 1024 / 1024 / 1024) > 4
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Process memory usage is {{ $value }}GB"

      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total[5m]) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value | humanizePercentage }}"

  - name: trading_system_critical
    rules:
      # Critical system failures
      - alert: TradingSystemCriticalFailure
        expr: |
          (
            up{job="trading-api"} == 0
            or
            rate(http_requests_total{code=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.50
            or
            trading_risk_max_drawdown > 0.20
          )
        for: 30s
        labels:
          severity: critical
          alert_type: immediate
        annotations:
          summary: "CRITICAL: Trading system failure"
          description: "Critical failure detected in trading system - immediate attention required"

      - alert: SecurityBreach
        expr: |
          (
            increase(auth_failed_login_attempts_total[1m]) > 50
            or
            increase(http_requests_total{code="401"}[1m]) > 100
            or
            rate_limit_violations_total > 1000
          )
        for: 30s
        labels:
          severity: critical
          alert_type: security
        annotations:
          summary: "SECURITY ALERT: Potential breach detected"
          description: "Potential security breach - investigate immediately"