# AI Trading System - Environment Configuration Template
# =========================================================
# This file shows all available environment variables
# Copy to .env for development or .env.production for production
# NEVER commit actual credentials to version control

# =================================
# Environment Settings
# =================================
ENVIRONMENT=development  # Options: development, staging, production
DEBUG=true              # Set to false in production
SERVICE_NAME=ai-trading-system
SERVICE_VERSION=1.0.0

# =================================
# Database Configuration
# =================================
# PostgreSQL
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=trading_db
POSTGRES_USER=trading_user
POSTGRES_PASSWORD=  # Generate with: openssl rand -hex 32

# Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=     # Generate with: openssl rand -hex 32

# =================================
# Security Configuration
# =================================
# JWT Configuration
JWT_SECRET=         # REQUIRED: Generate with: openssl rand -hex 32
JWT_ISSUER=ai-trading-system
JWT_AUDIENCE=trading-api
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_KEY_ROTATION_DAYS=30
JWT_KEY_OVERLAP_HOURS=24

# Encryption
ENCRYPTION_KEY=     # REQUIRED: Generate with: openssl rand -hex 32
BACKUP_ENCRYPTION_KEY=  # Generate with: openssl rand -hex 32

# Authentication
MAX_FAILED_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15
REQUIRE_MFA_SENSITIVE=true

# =================================
# Rate Limiting
# =================================
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20
ENFORCE_FAIL_CLOSED=true  # Critical for production
RATE_LIMIT_TRUSTED_IPS=   # Comma-separated list with HMAC signature

# =================================
# API Keys (Optional - for market data)
# =================================
# Alpaca Trading API
ALPACA_API_KEY=
ALPACA_SECRET_KEY=
ALPACA_BASE_URL=https://paper-api.alpaca.markets  # Use https://api.alpaca.markets for live

# Polygon Market Data
POLYGON_API_KEY=

# News API
NEWS_API_KEY=

# =================================
# AI Configuration
# =================================
# Local Models (Recommended)
OLLAMA_HOST=http://localhost:11434
USE_LOCAL_MODELS_ONLY=true

# Optional Cloud APIs
OPENAI_API_KEY=
ANTHROPIC_API_KEY=

# =================================
# Web Security
# =================================
CORS_ORIGINS=http://localhost:3000,http://localhost:8000
TRUSTED_HOSTS=localhost,127.0.0.1
CORS_ALLOW_CREDENTIALS=true

# Production only
LETSENCRYPT_EMAIL=
DOMAIN_NAME=

# =================================
# Monitoring
# =================================
PROMETHEUS_PORT=9090
GRAFANA_USER=admin
GRAFANA_PASSWORD=     # Generate secure password
LOG_LEVEL=INFO        # Options: DEBUG, INFO, WARNING, ERROR
LOG_FORMAT=json       # Options: json, text

# =================================
# Backup Configuration
# =================================
BACKUP_ENABLED=true
BACKUP_DIR=/var/backups/trading-system
BACKUP_RETENTION_DAYS=30

# Optional S3 Backup
BACKUP_S3_BUCKET=
BACKUP_S3_REGION=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# =================================
# Feature Flags
# =================================
FEATURE_LIVE_TRADING_ENABLED=false
FEATURE_RISK_MANAGEMENT_ENABLED=true
FEATURE_MODEL_INFERENCE_ENABLED=true
FEATURE_API_RATE_LIMITING_ENABLED=true

# =================================
# Notification Webhooks (Optional)
# =================================
NOTIFICATION_WEBHOOK=
SLACK_WEBHOOK_URL=
PAGERDUTY_INTEGRATION_KEY=

# =================================
# HashiCorp Vault (Optional - for production)
# =================================
VAULT_URL=
VAULT_TOKEN=
VAULT_MOUNT_PATH=secret/trading-system

# =================================
# IMPORTANT NOTES
# =================================
# 1. Generate all secrets with: openssl rand -hex 32
# 2. Never reuse passwords between environments
# 3. Rotate keys regularly (every 30-90 days)
# 4. Use HashiCorp Vault or AWS Secrets Manager in production
# 5. Enable ENFORCE_FAIL_CLOSED=true in production
# 6. Set DEBUG=false in production
# 7. Configure proper CORS_ORIGINS for your domain