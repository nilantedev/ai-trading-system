# AI Trading System - Environment Configuration Template
# =========================================================
# This file shows all available environment variables
# Copy to .env for development or .env.production for production
# NEVER commit actual credentials to version control

# =================================
# Environment Settings
# =================================
ENVIRONMENT=development  # Options: development, staging, production
DEBUG=true              # Set to false in production
SERVICE_NAME=ai-trading-system
SERVICE_VERSION=1.0.0

# =================================
# Database Configuration
# =================================
# PostgreSQL
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=trading_db
POSTGRES_USER=trading_user
POSTGRES_PASSWORD=  # Generate with: openssl rand -hex 32

# Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=     # Generate with: openssl rand -hex 32

# =================================
# Security Configuration
# =================================
# JWT Configuration
JWT_SECRET=         # REQUIRED: Generate with: openssl rand -hex 32
JWT_ISSUER=ai-trading-system
JWT_AUDIENCE=trading-api
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_KEY_ROTATION_DAYS=30
JWT_KEY_OVERLAP_HOURS=24

# Encryption
ENCRYPTION_KEY=     # REQUIRED: Generate with: openssl rand -hex 32
BACKUP_ENCRYPTION_KEY=  # Generate with: openssl rand -hex 32

# Authentication
MAX_FAILED_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15
REQUIRE_MFA_SENSITIVE=true

# =================================
# Rate Limiting
# =================================
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20
ENFORCE_FAIL_CLOSED=true  # Critical for production
RATE_LIMIT_TRUSTED_IPS=   # Comma-separated list with HMAC signature

# =================================
# API Keys (Optional - for market data)
# =================================
# Alpaca Trading API
ALPACA_API_KEY=
ALPACA_SECRET_KEY=
ALPACA_BASE_URL=https://paper-api.alpaca.markets  # Use https://api.alpaca.markets for live

# Polygon Market Data
POLYGON_API_KEY=
POLYGON_WEBSOCKET_ENABLED=true  # Enable real-time streaming
POLYGON_USE_WEBSOCKETS=true      # Use websockets for real-time data

# News API
NEWS_API_KEY=

# Optional News Sources
FINNHUB_API_KEY=                 # $25/month - Alternative to NewsAPI
MARKETAUX_API_KEY=               # $39/month - Financial news aggregator

# IEX Cloud (Backup data source)
IEX_CLOUD_API_KEY=               # $9/month - Backup market data

# Social Media APIs (Optional)
REDDIT_CLIENT_ID=
REDDIT_CLIENT_SECRET=
REDDIT_USER_AGENT=trading_bot_v1

# =================================
# AI Configuration
# =================================
# Local Models (Recommended)
OLLAMA_HOST=http://localhost:11434
USE_LOCAL_MODELS_ONLY=true

# Optional Cloud APIs
OPENAI_API_KEY=
ANTHROPIC_API_KEY=

# =================================
# Web Security
# =================================
CORS_ORIGINS=http://localhost:3000,http://localhost:8000
TRUSTED_HOSTS=localhost,127.0.0.1
CORS_ALLOW_CREDENTIALS=true

# Production only
LETSENCRYPT_EMAIL=
DOMAIN_NAME=

# =================================
# Monitoring
# =================================
PROMETHEUS_PORT=9090
GRAFANA_USER=admin
GRAFANA_PASSWORD=     # Generate secure password
LOG_LEVEL=INFO        # Options: DEBUG, INFO, WARNING, ERROR
LOG_FORMAT=json       # Options: json, text

# =================================
# Backup Configuration
# =================================
BACKUP_ENABLED=true
BACKUP_DIR=/var/backups/trading-system
BACKUP_RETENTION_DAYS=30

# Optional S3 Backup
BACKUP_S3_BUCKET=
BACKUP_S3_REGION=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# =================================
# Data Ingestion Configuration
# =================================
# Multi-frequency polling intervals (seconds)
DATA_POLLING_URGENT=30           # Breaking news, major events
DATA_POLLING_FAST=120            # Fast market updates (2 min)
DATA_POLLING_STANDARD=900        # Standard updates (15 min)
DATA_POLLING_BACKGROUND=3600     # Background analysis (1 hour)

# News polling configuration
NEWS_POLLING_BREAKING=120        # Breaking news check (2 min)
NEWS_POLLING_STANDARD=900        # Regular news (15 min)
NEWS_MAX_REQUESTS_PER_DAY=900    # Stay within NewsAPI free tier (1000/day)

# Social sentiment polling
REDDIT_POLLING_INTERVAL=300      # Reddit check (5 min)
SOCIAL_SENTIMENT_INTERVAL=600    # Overall sentiment (10 min)

# Market data streaming
MARKET_DATA_STREAMING=true       # Enable real-time streaming
MARKET_DATA_WEBSOCKET_ENABLED=true
MARKET_DATA_BATCH_SIZE=100       # Batch size for processing
MARKET_DATA_BUFFER_SIZE=1000     # Buffer for real-time data

# Data velocity thresholds
PRICE_CHANGE_URGENT_THRESHOLD=2.0   # % change to trigger urgent processing
VOLUME_SURGE_THRESHOLD=3.0          # Volume multiplier for urgent
NEWS_SENTIMENT_URGENT_SCORE=0.8     # Sentiment score for urgent

# Strategy-aware routing
ENABLE_STRATEGY_ROUTING=true        # Enable intelligent data routing
DAY_TRADE_DATA_PRIORITY=true        # Prioritize data for day trading
SWING_TRADE_DATA_PRIORITY=false     # Prioritize for swing trading

# =================================
# Feature Flags
# =================================
FEATURE_LIVE_TRADING_ENABLED=false
FEATURE_RISK_MANAGEMENT_ENABLED=true
FEATURE_MODEL_INFERENCE_ENABLED=true
FEATURE_API_RATE_LIMITING_ENABLED=true
FEATURE_MULTI_STRATEGY_SUPPORT=true     # Enable multi-strategy support
FEATURE_DAY_TRADING_ENABLED=true        # Enable day trading strategies
FEATURE_REALTIME_DATA_ENABLED=true      # Enable real-time data processing

# =================================
# Notification Webhooks (Optional)
# =================================
NOTIFICATION_WEBHOOK=
SLACK_WEBHOOK_URL=
PAGERDUTY_INTEGRATION_KEY=

# =================================
# HashiCorp Vault (Optional - for production)
# =================================
VAULT_URL=
VAULT_TOKEN=
VAULT_MOUNT_PATH=secret/trading-system

# =================================
# IMPORTANT NOTES
# =================================
# 1. Generate all secrets with: openssl rand -hex 32
# 2. Never reuse passwords between environments
# 3. Rotate keys regularly (every 30-90 days)
# 4. Use HashiCorp Vault or AWS Secrets Manager in production
# 5. Enable ENFORCE_FAIL_CLOSED=true in production
# 6. Set DEBUG=false in production
# 7. Configure proper CORS_ORIGINS for your domain